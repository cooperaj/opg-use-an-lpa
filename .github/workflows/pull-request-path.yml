name: "[Workflow] Standard branch based pull requests"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - 'UML-2560**'
#      - '*'              # matches every branch that doesn't contain a '/'
#      - '*/*'            # matches every branch containing a single '/'
#      - '**'             # matches every branch
#      - '!main'          # reverse match main
#      - '!dependabot/**' # reverse match dependabot PRs


# Base permissions are better

permissions:
  contents: write
  security-events: write
  pull-requests: read
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  statuses: none

jobs:
  workflow_variables:
    runs-on: ubuntu-latest
    name: Extract branch name
    outputs:
      raw_branch: ${{ steps.extract_branch.outputs.branch_raw }}
      parsed_branch: ${{ steps.extract_branch.outputs.branch_formatted }}
      short_sha:  ${{ steps.sha.outputs.short_sha }}
    steps:
      - name: Extract branch
        shell: bash
        run: |
          echo "##[set-output name=branch_raw;]$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF##*/}})"
          echo "##[set-output name=branch_formatted;]$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF##*/}} | tr -cd '[:alnum:]' | tr '[:upper:]' '[:lower:]')"
        id: extract_branch
      - name: Extract short sha
        shell: bash
        run: |
          echo "##[set-output name=short_sha;]$(echo ${GITHUB_SHA:0:7})"
        id: sha

  terraform_lint:
    name: lint terraform code
    uses: ./.github/workflows/_lint-terraform.yml
    needs:
      - workflow_variables
    with:
      workspace: ${{ needs.workflow_variables.outputs.parsed_branch }}
    secrets: inherit

  node_test:
    if: github.actor != 'dependabot[bot]'
    name: test node dependencies
    uses: ./.github/workflows/_node-test.yml

  node_build:
    if: github.actor != 'dependabot[bot]'
    name: build node dependencies
    uses: ./.github/workflows/_node-build.yml

  docker_build_scan_push:
    name: build, test, scan and push
    uses: ./.github/workflows/_build-and-push.yml
    needs:
      - workflow_variables
      - node_test
      - node_build
    with:
      tag: ${{ needs.workflow_variables.outputs.parsed_branch }}-${{ needs.workflow_variables.outputs.short_sha }}
      branch_name: ${{ needs.workflow_variables.outputs.parsed_branch }}
      push_to_ecr: true
    secrets: inherit

  terraform_plan_shared_development:
    name: terraform plan shared development
    uses: ./.github/workflows/_run-terraform.yml
    needs:
      - terraform_lint
    with:
      workspace: development
      terraform_path: account
    secrets: inherit

  terraform_apply_environment:
    name: terraform apply environment
    uses: ./.github/workflows/_run-terraform.yml
    needs:
      - docker_build_scan_push
      - terraform_lint
      - workflow_variables
    with:
      workspace: ${{ needs.workflow_variables.outputs.parsed_branch }}
      terraform_path: environment
      container_version: ${{ needs.workflow_variables.outputs.parsed_branch }}-${{ needs.workflow_variables.outputs.short_sha }}
      apply: true
    secrets: inherit

  seed_dynamodb:
    name: seed dynamodb
    uses: ./.github/workflows/_seed-database.yml
    needs:
      - terraform_apply_environment
    secrets: inherit

  run_behat_suite:
    name: run behat tests against environment
    uses: ./.github/workflows/_run-behat-tests.yml
    needs:
      - seed_dynamodb
      - workflow_variables
    with:
      workspace: ${{ needs.workflow_variables.outputs.parsed_branch }}
    secrets: inherit

  python_templated_slack_notify:
    name: notify of result
    uses: ./.github/workflows/_slack-notification.yml
    needs:
      - run_behat_suite
    with:
      template: successful_dev_build.txt
    secrets:
      webhook: ${{ secrets.DEV_SLACK_WEB_HOOK }}

  code_coverage:
    name: upload to code coverage
    needs: ['docker_build_scan_push']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin@v3
      - name: get and validate codecov app
        run: bash ./scripts/pipeline/codecov_uploader/validate_codecov_uploader.sh
      - name: download artifact for front tests
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: service-front
          path: service-front
      - name: download artifact for api tests
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: service-api
          path: service-api
      - name: upload to codecov
        env:
          CC_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          bash codecov -t ${CC_TOKEN} || echo 'Codecov upload failed'

  # Required end of workflow job
  workflow_end:
    name: End of workflow
    runs-on: ubuntu-latest
    needs:
      - code_coverage
      - python_templated_slack_notify
    steps:
      - name: ending workflow
        run: echo "Workflow has finished without any issues"
